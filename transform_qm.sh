#!/usr/bin/env bash
set -e # ÏóêÎü¨ Î∞úÏÉù Ïãú Ï¶âÏãú Ï¢ÖÎ£å

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# Îç∞Ïù¥ÌÑ∞ÏÖãÎ≥Ñ ÏÑ§Ï†ï
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
DATASETS=("elevators" "CASP" "credit" "gamma" "wine" "shuttle")
# ‚ñº‚ñº‚ñº [Ï∂îÍ∞Ä] ÌöåÍ∑Ä Îç∞Ïù¥ÌÑ∞ÏÖãÏùÑ Î≥ÑÎèÑÎ°ú Ï†ïÏùòÌï©ÎãàÎã§ ‚ñº‚ñº‚ñº
REGRESSION_DATASETS=("elevators" "CASP")

SEEDS_LIST="0 1 2 3 4 5 6 7 8 9"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# Ïã§Ìóò Î£®ÌîÑ - ÏàòÏπòÌòï Î†àÏù¥Î∏î Î≥ÄÌôò ÏûàÏùå
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
echo "‚öôÔ∏è Î≥ÄÌôò ÏãúÏûë"

TRANSFORM_SCRIPT="qm_transform_train_test_batch_label.py"
LABEL_COL="label"
OUTPUT_DIR="transformed_data_batch_label"

# Í∞í Î¶¨Ïä§Ìä∏
EPS_VALUES="1.0 2.0 3.0 4.0 5.0"
N_VALUES="7"

for DATASET in "${DATASETS[@]}"; do
  CSV_PATH="data/${DATASET}.csv"

  echo "üîÑ Ïã§Ìóò ÏãúÏûë: ${DATASET}"

  # Îç∞Ïù¥ÌÑ∞ÏÖãÏóê Îî∞Îùº transform_label_log ÏÑ§Ï†ï
  TRANSFORM_LABEL_LOG_FLAG="False"
  if [[ "${DATASET}" == "OnlineNewsPopularity" || "${DATASET}" == "Beijing_housing" ]]; then
    TRANSFORM_LABEL_LOG_FLAG="True"
  fi

  for N_VAL in $N_VALUES; do
    # label_NÏùÄ Îç∞Ïù¥ÌÑ∞ÏÖãÏóê Îî∞Îùº ÏÑ§Ï†ïÎêú Í≥†Ï†ï Í∞í ÏÇ¨Ïö©
    if [[ "${DATASET}" == "wine" || "${DATASET}" == "shuttle" ]]; then
      LABEL_N_CURRENT=7
    elif [[ "${DATASET}" == "gamma" || "${DATASET}" == "credit" ]]; then
      LABEL_N_CURRENT=2
    else
      LABEL_N_CURRENT=${N_VAL}
    fi

    # 1. eps == label_eps Ïù∏ Í≤ΩÏö∞ Ï≤òÎ¶¨
    for EPS_EQ in $EPS_VALUES; do

      # ‚ñº‚ñº‚ñº [ÏàòÏ†ï] Îç∞Ïù¥ÌÑ∞ÏÖãÏù¥ ÌöåÍ∑ÄÏö©Ïù∏ÏßÄ ÏïÑÎãåÏßÄÏóê Îî∞Îùº Î∂ÑÍ∏∞ Ï≤òÎ¶¨ ‚ñº‚ñº‚ñº
      if [[ " ${REGRESSION_DATASETS[@]} " =~ " ${DATASET} " ]]; then
        # ‚úÖ ÌöåÍ∑Ä Îç∞Ïù¥ÌÑ∞ÏÖãÏù∏ Í≤ΩÏö∞: label_indexÎ•º True/FalseÎ°ú Î∞òÎ≥µ Ïã§Ìñâ
        echo "  -> ÌöåÍ∑Ä Îç∞Ïù¥ÌÑ∞ÏÖãÏúºÎ°ú Í∞êÏßÄ. label_index ÏòµÏÖòÏùÑ Î™®Îëê ÌÖåÏä§Ìä∏Ìï©ÎãàÎã§."
        for LABEL_INDEX_FLAG in "True" "False"; do
        
          SUB_DIR="inverse_linear"
          if [[ "${LABEL_INDEX_FLAG}" == "True" ]]; then
            SUB_DIR="inverse_index"
          fi
          CURRENT_OUTPUT_DIR="${OUTPUT_DIR}/${SUB_DIR}"

          echo "‚ñ∂Ô∏è dataset=${DATASET}, eps=${EPS_EQ}, label_index=${LABEL_INDEX_FLAG}"
          python ${TRANSFORM_SCRIPT} \
            --csv_path "${CSV_PATH}" \
            --label_col "${LABEL_COL}" \
            --output_dir "${CURRENT_OUTPUT_DIR}" \
            --eps "${EPS_EQ}" \
            --N "${N_VAL}" \
            --label_N "${LABEL_N_CURRENT}" \
            --label_epsilon "${EPS_EQ}" \
            --obj worst \
            --with_categorical False \
            --transform_label_numerical True \
            --transform_label_categorical False \
            --test_size 0.2 \
            --random_state 42 \
            --transform_label_log "${TRANSFORM_LABEL_LOG_FLAG}" \
            --label_index "${LABEL_INDEX_FLAG}" # <-- label_index ÏòµÏÖò Ï∂îÍ∞Ä
        done
      else
        # ‚ö†Ô∏è ÌöåÍ∑Ä Îç∞Ïù¥ÌÑ∞ÏÖãÏù¥ ÏïÑÎãå Í≤ΩÏö∞: Í∏∞Ï°¥ Î∞©ÏãùÎåÄÎ°ú Ìïú Î≤àÎßå Ïã§Ìñâ
        echo "‚ñ∂Ô∏è dataset=${DATASET}, eps=${EPS_EQ}"
        python ${TRANSFORM_SCRIPT} \
          --csv_path "${CSV_PATH}" \
          --label_col "${LABEL_COL}" \
          --output_dir "${OUTPUT_DIR}" \
          --eps "${EPS_EQ}" \
          --N "${N_VAL}" \
          --label_N "${LABEL_N_CURRENT}" \
          --label_epsilon "${EPS_EQ}" \
          --obj worst \
          --with_categorical False \
          --transform_label_numerical True \
          --transform_label_categorical False \
          --test_size 0.2 \
          --random_state 42 \
          --transform_label_log "${TRANSFORM_LABEL_LOG_FLAG}"
      fi
      # ‚ñ≤‚ñ≤‚ñ≤ Î∂ÑÍ∏∞ Ï≤òÎ¶¨ Ï¢ÖÎ£å ‚ñ≤‚ñ≤‚ñ≤
    done

:<<END
    # 2. eps != label_eps Ïù∏ Í≤ΩÏö∞ Ï≤òÎ¶¨ (Î™®Îì† Ï°∞Ìï© Ï§ë eps==label_eps Ï†úÏô∏)
    for EPS in $EPS_VALUES; do
      for LABEL_EPS in $LABEL_EPS_VALUES; do
        echo "‚ñ∂Ô∏è dataset=${DATASET}, N=${N_VAL}, eps=${EPS}, label_eps=${LABEL_EPS}, label_N=${LABEL_N_CURRENT}, transform_label_numerical=True, transform_label_log=${TRANSFORM_LABEL_LOG_FLAG} (eps != label_eps)"
        python ${TRANSFORM_SCRIPT} \
          --csv_path "${CSV_PATH}" \
          --label_col "${LABEL_COL}" \
          --output_dir "${OUTPUT_DIR}" \
          --eps "${EPS}" \
          --N "${N_VAL}" \
          --label_N "${LABEL_N_CURRENT}" \
          --label_epsilon "${LABEL_EPS}" \
          --obj avg \
          --with_categorical False \
          --transform_label_numerical True \
          --transform_label_categorical False \
          --test_size 0.2 \
          --random_state 42 \
          --transform_label_log "${TRANSFORM_LABEL_LOG_FLAG}"
      done
    done
END

  done # N_VAL Î£®ÌîÑ Ï¢ÖÎ£å
done

echo "‚ú® Ï†ÑÏ≤¥ Ïã§Ìóò ÏôÑÎ£å!"
